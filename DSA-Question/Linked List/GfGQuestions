class Node {
      int val;
      Node next;
      Node() {}
      Node(int val) { this.val = val; }
      Node(int val, Node next) { this.val = val; this.next = next; }
}
class ListNode {
    int val;
    ListNode next;
    ListNode() {}
    ListNode(int val) { this.val = val; }
    ListNode(int val, ListNode next) { this.val = val; this.next = next; }
}
public class GfgQuestions{

    //rotate right by k
    private int getLen(ListNode head){
        ListNode temp = head;
        int len = 0;
        while(temp!=null){
            temp = temp.next;
            len++;
        }
        return len;
    }

    private ListNode rotate(ListNode headCopy){
        //this function needs to be updated if asked to rotate from left
        ListNode curr = headCopy;
        while(curr.next.next!=null){
            curr=curr.next; //curr is at 2nd last node
        }
        ListNode last = curr.next;
        curr.next = null;
        last.next = headCopy;
        headCopy = last;
        return headCopy;
    }
    public ListNode rotateRight(ListNode head, int k) {
        int len = getLen(head);
        if(len == 0) return null;
        if(k%len == 0){
            return head;
        }
        k = k%len;
        ListNode headCopy = head;
        for(int i = 0;i<k;i++){
            headCopy = rotate(headCopy);
        }
        return headCopy;
    }





}